{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Créer une instance axios avec configuration par défaut\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config=>{const token=localStorage.getItem('us_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('us_token');localStorage.removeItem('us_user');window.location.href='/';}return Promise.reject(error);});export const authService={login:async(email,password)=>{const response=await api.post('/login',{email,password});return response.data;},register:async(name,email,password)=>{const response=await api.post('/register',{name,email,password});return response.data;},getUsers:async()=>{const response=await api.get('/users');return response.data;}};export const reminderService={getAll:async()=>{const response=await api.get('/reminders');return response.data;},create:async reminder=>{const response=await api.post('/reminders',reminder);return response.data;},update:async(id,updates)=>{const response=await api.put(\"/reminders/\".concat(id),updates);return response.data;},delete:async id=>{const response=await api.delete(\"/reminders/\".concat(id));return response.data;}};export const restaurantService={getAll:async()=>{const response=await api.get('/restaurants');return response.data;},create:async restaurant=>{const response=await api.post('/restaurants',restaurant);return response.data;},update:async(id,updates)=>{const response=await api.put(\"/restaurants/\".concat(id),updates);return response.data;}};export const activityService={getAll:async()=>{const response=await api.get('/activities');return response.data;},create:async activity=>{const response=await api.post('/activities',activity);return response.data;},update:async(id,updates)=>{const response=await api.put(\"/activities/\".concat(id),updates);return response.data;}};export const wishlistService={getAll:async()=>{const response=await api.get('/wishlist');return response.data;},create:async item=>{const response=await api.post('/wishlist',item);return response.data;},update:async(id,updates)=>{const response=await api.put(\"/wishlist/\".concat(id),updates);return response.data;}};export const photoService={getAll:async()=>{const response=await api.get('/photos');return response.data;},create:async photo=>{const response=await api.post('/photos',photo);return response.data;}};export const noteService={getAll:async()=>{const response=await api.get('/notes');return response.data;},create:async note=>{const response=await api.post('/notes',note);return response.data;},update:async(id,updates)=>{const response=await api.put(\"/notes/\".concat(id),updates);return response.data;},delete:async id=>{const response=await api.delete(\"/notes/\".concat(id));return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","email","password","post","data","register","name","getUsers","get","reminderService","getAll","reminder","update","id","updates","put","delete","restaurantService","restaurant","activityService","activity","wishlistService","item","photoService","photo","noteService","note"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Créer une instance axios avec configuration par défaut\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('us_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les erreurs d'authentification\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('us_token');\r\n      localStorage.removeItem('us_user');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (name, email, password) => {\r\n    const response = await api.post('/register', { name, email, password });\r\n    return response.data;\r\n  },\r\n\r\n  getUsers: async () => {\r\n    const response = await api.get('/users');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const reminderService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/reminders');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (reminder) => {\r\n    const response = await api.post('/reminders', reminder);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/reminders/${id}`, updates);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/reminders/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const restaurantService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/restaurants');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (restaurant) => {\r\n    const response = await api.post('/restaurants', restaurant);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/restaurants/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const activityService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/activities');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (activity) => {\r\n    const response = await api.post('/activities', activity);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/activities/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const wishlistService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/wishlist');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (item) => {\r\n    const response = await api.post('/wishlist', item);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/wishlist/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const photoService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/photos');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (photo) => {\r\n    const response = await api.post('/photos', photo);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const noteService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/notes');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (note) => {\r\n    const response = await api.post('/notes', note);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/notes/${id}`, updates);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/notes/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}