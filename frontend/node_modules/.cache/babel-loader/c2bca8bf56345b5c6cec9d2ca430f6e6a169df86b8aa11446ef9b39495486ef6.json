{"ast":null,"code":"// Basic auth & API service with token persistence and photo upload helper\nimport axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE || '';\nfunction getToken() {\n  return localStorage.getItem('access_token');\n}\nexport const authService = {\n  api: null,\n  init() {\n    if (this.api) return this.api;\n    this.api = axios.create({\n      baseURL: API_BASE,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    this.api.interceptors.request.use(cfg => {\n      const t = getToken();\n      if (t) cfg.headers.Authorization = `Bearer ${t}`;\n      return cfg;\n    });\n    return this.api;\n  },\n  setToken(token) {\n    localStorage.setItem('access_token', token);\n  },\n  clearToken() {\n    localStorage.removeItem('access_token');\n  },\n  async login(email, password) {\n    var _res$data;\n    this.init();\n    const res = await this.api.post('/api/login', {\n      email,\n      password\n    });\n    if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.access_token) this.setToken(res.data.access_token);\n    return res.data;\n  },\n  async register(name, email, password) {\n    var _res$data2;\n    this.init();\n    const res = await this.api.post('/api/register', {\n      name,\n      email,\n      password\n    });\n    if ((_res$data2 = res.data) !== null && _res$data2 !== void 0 && _res$data2.access_token) this.setToken(res.data.access_token);\n    return res.data;\n  },\n  photoService: {\n    async uploadMultipart(files) {\n      const fd = new FormData();\n      files.forEach(f => fd.append('files', f));\n      const token = getToken();\n      const res = await fetch('/api/photos', {\n        method: 'POST',\n        headers: token ? {\n          'Authorization': `Bearer ${token}`\n        } : {},\n        body: fd\n      });\n      if (!res.ok) throw new Error('Upload failed');\n      return res.json();\n    }\n  }\n};\nauthService.init();","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","getToken","localStorage","getItem","authService","api","init","create","baseURL","headers","interceptors","request","use","cfg","t","Authorization","setToken","token","setItem","clearToken","removeItem","login","email","password","_res$data","res","post","data","access_token","register","name","_res$data2","photoService","uploadMultipart","files","fd","FormData","forEach","f","append","fetch","method","body","ok","Error","json"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/services/authService.js"],"sourcesContent":["// Basic auth & API service with token persistence and photo upload helper\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || '';\r\n\r\nfunction getToken() {\r\n\treturn localStorage.getItem('access_token');\r\n}\r\n\r\nexport const authService = {\r\n\tapi: null,\r\n\tinit() {\r\n\t\tif (this.api) return this.api;\r\n\t\tthis.api = axios.create({\r\n\t\t\tbaseURL: API_BASE,\r\n\t\t\theaders: { 'Content-Type': 'application/json' }\r\n\t\t});\r\n\t\tthis.api.interceptors.request.use(cfg => {\r\n\t\t\tconst t = getToken();\r\n\t\t\tif (t) cfg.headers.Authorization = `Bearer ${t}`;\r\n\t\t\treturn cfg;\r\n\t\t});\r\n\t\treturn this.api;\r\n\t},\r\n\tsetToken(token) {\r\n\t\tlocalStorage.setItem('access_token', token);\r\n\t},\r\n\tclearToken() { localStorage.removeItem('access_token'); },\r\n\tasync login(email, password) {\r\n\t\tthis.init();\r\n\t\tconst res = await this.api.post('/api/login', { email, password });\r\n\t\tif (res.data?.access_token) this.setToken(res.data.access_token);\r\n\t\treturn res.data;\r\n\t},\r\n\tasync register(name, email, password) {\r\n\t\tthis.init();\r\n\t\tconst res = await this.api.post('/api/register', { name, email, password });\r\n\t\tif (res.data?.access_token) this.setToken(res.data.access_token);\r\n\t\treturn res.data;\r\n\t},\r\n\tphotoService: {\r\n\t\tasync uploadMultipart(files) {\r\n\t\t\tconst fd = new FormData();\r\n\t\t\tfiles.forEach(f => fd.append('files', f));\r\n\t\t\tconst token = getToken();\r\n\t\t\tconst res = await fetch('/api/photos', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: token ? { 'Authorization': `Bearer ${token}` } : {},\r\n\t\t\t\tbody: fd\r\n\t\t\t});\r\n\t\t\tif (!res.ok) throw new Error('Upload failed');\r\n\t\t\treturn res.json();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nauthService.init();\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}