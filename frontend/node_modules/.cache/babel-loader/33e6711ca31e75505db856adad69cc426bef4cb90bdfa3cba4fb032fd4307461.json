{"ast":null,"code":"// Service de gestion des notifications PWA\nclass NotificationService {\n  constructor() {\n    this.isSupported = 'Notification' in window && 'serviceWorker' in navigator;\n    this.permission = Notification.permission;\n  }\n\n  // Initialiser le service worker et demander la permission\n  async init() {\n    if (!this.isSupported) {\n      console.log('Les notifications ne sont pas support√©es');\n      return false;\n    }\n    try {\n      // Enregistrer le service worker\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('Service Worker enregistr√©:', registration);\n\n      // Demander la permission pour les notifications\n      if (this.permission === 'default') {\n        this.permission = await Notification.requestPermission();\n      }\n      return this.permission === 'granted';\n    } catch (error) {\n      console.error('Erreur lors de l\\'initialisation des notifications:', error);\n      return false;\n    }\n  }\n\n  // V√©rifier si les notifications sont activ√©es\n  isEnabled() {\n    return this.isSupported && this.permission === 'granted';\n  }\n\n  // Demander explicitement la permission\n  async requestPermission() {\n    if (!this.isSupported) return false;\n    try {\n      this.permission = await Notification.requestPermission();\n      return this.permission === 'granted';\n    } catch (error) {\n      console.error('Erreur lors de la demande de permission:', error);\n      return false;\n    }\n  }\n\n  // Envoyer une notification locale\n  async showNotification(title, options = {}) {\n    if (!this.isEnabled()) {\n      console.log('Notifications non autoris√©es');\n      return false;\n    }\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      const defaultOptions = {\n        body: 'Nouveau rappel ajout√© !',\n        icon: '/favicon.ico',\n        badge: '/favicon.ico',\n        vibrate: [100, 50, 100],\n        data: {\n          dateOfArrival: Date.now(),\n          primaryKey: '1'\n        },\n        actions: [{\n          action: 'explore',\n          title: 'Voir',\n          icon: '/favicon.ico'\n        }, {\n          action: 'close',\n          title: 'Fermer',\n          icon: '/favicon.ico'\n        }],\n        requireInteraction: false,\n        silent: false\n      };\n      const notificationOptions = {\n        ...defaultOptions,\n        ...options\n      };\n      await registration.showNotification(title, notificationOptions);\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de l\\'affichage de la notification:', error);\n      return false;\n    }\n  }\n\n  // Notification pour un nouveau rappel\n  async notifyNewReminder(reminder) {\n    const title = 'üìù Nouveau rappel';\n    const options = {\n      body: `\"${reminder.title}\" - Priorit√©: ${reminder.priority}`,\n      icon: '/favicon.ico',\n      data: {\n        type: 'reminder',\n        reminderId: reminder._id,\n        url: '/rappels'\n      },\n      actions: [{\n        action: 'view',\n        title: 'Voir le rappel',\n        icon: '/favicon.ico'\n      }, {\n        action: 'dismiss',\n        title: 'OK',\n        icon: '/favicon.ico'\n      }]\n    };\n    return this.showNotification(title, options);\n  }\n\n  // Notification pour un rappel urgent\n  async notifyUrgentReminder(reminder) {\n    const title = 'üö® Rappel urgent !';\n    const options = {\n      body: `\"${reminder.title}\" - √Ä faire rapidement !`,\n      icon: '/favicon.ico',\n      requireInteraction: true,\n      vibrate: [200, 100, 200, 100, 200],\n      data: {\n        type: 'urgent_reminder',\n        reminderId: reminder._id,\n        url: '/rappels'\n      }\n    };\n    return this.showNotification(title, options);\n  }\n\n  // Notification pour rappel d√ª bient√¥t\n  async notifyReminderDue(reminder) {\n    const dueDate = new Date(reminder.due_date);\n    const now = new Date();\n    const diffHours = Math.round((dueDate - now) / (1000 * 60 * 60));\n    const title = '‚è∞ Rappel √† venir';\n    const options = {\n      body: diffHours > 0 ? `\"${reminder.title}\" - Dans ${diffHours}h` : `\"${reminder.title}\" - Maintenant !`,\n      icon: '/favicon.ico',\n      data: {\n        type: 'due_reminder',\n        reminderId: reminder._id,\n        url: '/rappels'\n      }\n    };\n    return this.showNotification(title, options);\n  }\n\n  // V√©rifier et programmer les notifications pour les rappels dus\n  async scheduleReminderNotifications(reminders) {\n    if (!this.isEnabled()) return;\n    const now = new Date();\n    reminders.forEach(reminder => {\n      if (reminder.due_date && reminder.status !== 'done') {\n        const dueDate = new Date(reminder.due_date);\n        const timeDiff = dueDate - now;\n\n        // Notifier 1 heure avant\n        if (timeDiff > 0 && timeDiff <= 60 * 60 * 1000) {\n          setTimeout(() => {\n            this.notifyReminderDue(reminder);\n          }, timeDiff - 60 * 60 * 1000); // 1h avant\n        }\n\n        // Notifier √† l'heure\n        if (timeDiff > 0 && timeDiff <= 24 * 60 * 60 * 1000) {\n          setTimeout(() => {\n            this.notifyReminderDue(reminder);\n          }, timeDiff);\n        }\n      }\n    });\n  }\n\n  // Test de notification\n  async testNotification() {\n    return this.showNotification('üß™ Test de notification', {\n      body: 'Si tu vois √ßa, les notifications fonctionnent !',\n      requireInteraction: false\n    });\n  }\n}\n\n// Instance singleton\nconst notificationService = new NotificationService();\nexport default notificationService;","map":{"version":3,"names":["NotificationService","constructor","isSupported","window","navigator","permission","Notification","init","console","log","registration","serviceWorker","register","requestPermission","error","isEnabled","showNotification","title","options","ready","defaultOptions","body","icon","badge","vibrate","data","dateOfArrival","Date","now","primaryKey","actions","action","requireInteraction","silent","notificationOptions","notifyNewReminder","reminder","priority","type","reminderId","_id","url","notifyUrgentReminder","notifyReminderDue","dueDate","due_date","diffHours","Math","round","scheduleReminderNotifications","reminders","forEach","status","timeDiff","setTimeout","testNotification","notificationService"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/services/notificationService.js"],"sourcesContent":["// Service de gestion des notifications PWA\r\nclass NotificationService {\r\n  constructor() {\r\n    this.isSupported = 'Notification' in window && 'serviceWorker' in navigator;\r\n    this.permission = Notification.permission;\r\n  }\r\n\r\n  // Initialiser le service worker et demander la permission\r\n  async init() {\r\n    if (!this.isSupported) {\r\n      console.log('Les notifications ne sont pas support√©es');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      // Enregistrer le service worker\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      console.log('Service Worker enregistr√©:', registration);\r\n\r\n      // Demander la permission pour les notifications\r\n      if (this.permission === 'default') {\r\n        this.permission = await Notification.requestPermission();\r\n      }\r\n\r\n      return this.permission === 'granted';\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'initialisation des notifications:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // V√©rifier si les notifications sont activ√©es\r\n  isEnabled() {\r\n    return this.isSupported && this.permission === 'granted';\r\n  }\r\n\r\n  // Demander explicitement la permission\r\n  async requestPermission() {\r\n    if (!this.isSupported) return false;\r\n    \r\n    try {\r\n      this.permission = await Notification.requestPermission();\r\n      return this.permission === 'granted';\r\n    } catch (error) {\r\n      console.error('Erreur lors de la demande de permission:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Envoyer une notification locale\r\n  async showNotification(title, options = {}) {\r\n    if (!this.isEnabled()) {\r\n      console.log('Notifications non autoris√©es');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const registration = await navigator.serviceWorker.ready;\r\n      \r\n      const defaultOptions = {\r\n        body: 'Nouveau rappel ajout√© !',\r\n        icon: '/favicon.ico',\r\n        badge: '/favicon.ico',\r\n        vibrate: [100, 50, 100],\r\n        data: {\r\n          dateOfArrival: Date.now(),\r\n          primaryKey: '1'\r\n        },\r\n        actions: [\r\n          {\r\n            action: 'explore',\r\n            title: 'Voir',\r\n            icon: '/favicon.ico'\r\n          },\r\n          {\r\n            action: 'close',\r\n            title: 'Fermer',\r\n            icon: '/favicon.ico'\r\n          }\r\n        ],\r\n        requireInteraction: false,\r\n        silent: false\r\n      };\r\n\r\n      const notificationOptions = { ...defaultOptions, ...options };\r\n      \r\n      await registration.showNotification(title, notificationOptions);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'affichage de la notification:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Notification pour un nouveau rappel\r\n  async notifyNewReminder(reminder) {\r\n    const title = 'üìù Nouveau rappel';\r\n    const options = {\r\n      body: `\"${reminder.title}\" - Priorit√©: ${reminder.priority}`,\r\n      icon: '/favicon.ico',\r\n      data: {\r\n        type: 'reminder',\r\n        reminderId: reminder._id,\r\n        url: '/rappels'\r\n      },\r\n      actions: [\r\n        {\r\n          action: 'view',\r\n          title: 'Voir le rappel',\r\n          icon: '/favicon.ico'\r\n        },\r\n        {\r\n          action: 'dismiss',\r\n          title: 'OK',\r\n          icon: '/favicon.ico'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.showNotification(title, options);\r\n  }\r\n\r\n  // Notification pour un rappel urgent\r\n  async notifyUrgentReminder(reminder) {\r\n    const title = 'üö® Rappel urgent !';\r\n    const options = {\r\n      body: `\"${reminder.title}\" - √Ä faire rapidement !`,\r\n      icon: '/favicon.ico',\r\n      requireInteraction: true,\r\n      vibrate: [200, 100, 200, 100, 200],\r\n      data: {\r\n        type: 'urgent_reminder',\r\n        reminderId: reminder._id,\r\n        url: '/rappels'\r\n      }\r\n    };\r\n\r\n    return this.showNotification(title, options);\r\n  }\r\n\r\n  // Notification pour rappel d√ª bient√¥t\r\n  async notifyReminderDue(reminder) {\r\n    const dueDate = new Date(reminder.due_date);\r\n    const now = new Date();\r\n    const diffHours = Math.round((dueDate - now) / (1000 * 60 * 60));\r\n    \r\n    const title = '‚è∞ Rappel √† venir';\r\n    const options = {\r\n      body: diffHours > 0 \r\n        ? `\"${reminder.title}\" - Dans ${diffHours}h`\r\n        : `\"${reminder.title}\" - Maintenant !`,\r\n      icon: '/favicon.ico',\r\n      data: {\r\n        type: 'due_reminder',\r\n        reminderId: reminder._id,\r\n        url: '/rappels'\r\n      }\r\n    };\r\n\r\n    return this.showNotification(title, options);\r\n  }\r\n\r\n  // V√©rifier et programmer les notifications pour les rappels dus\r\n  async scheduleReminderNotifications(reminders) {\r\n    if (!this.isEnabled()) return;\r\n\r\n    const now = new Date();\r\n    \r\n    reminders.forEach(reminder => {\r\n      if (reminder.due_date && reminder.status !== 'done') {\r\n        const dueDate = new Date(reminder.due_date);\r\n        const timeDiff = dueDate - now;\r\n        \r\n        // Notifier 1 heure avant\r\n        if (timeDiff > 0 && timeDiff <= 60 * 60 * 1000) {\r\n          setTimeout(() => {\r\n            this.notifyReminderDue(reminder);\r\n          }, timeDiff - (60 * 60 * 1000)); // 1h avant\r\n        }\r\n        \r\n        // Notifier √† l'heure\r\n        if (timeDiff > 0 && timeDiff <= 24 * 60 * 60 * 1000) {\r\n          setTimeout(() => {\r\n            this.notifyReminderDue(reminder);\r\n          }, timeDiff);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Test de notification\r\n  async testNotification() {\r\n    return this.showNotification('üß™ Test de notification', {\r\n      body: 'Si tu vois √ßa, les notifications fonctionnent !',\r\n      requireInteraction: false\r\n    });\r\n  }\r\n}\r\n\r\n// Instance singleton\r\nconst notificationService = new NotificationService();\r\n\r\nexport default notificationService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}