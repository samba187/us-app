{"ast":null,"code":"// frontend/src/services/authService.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// ---- Token sur chaque requête\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('us_token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n// ---- Gestion 401 / 409 globalement\napi.interceptors.response.use(res => res, error => {\n  var _error$response, _error$response2;\n  const status = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n  const data = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n  if (status === 401) {\n    localStorage.removeItem('us_token');\n    localStorage.removeItem('us_user');\n    window.location.href = '/';\n  }\n  if (status === 409 && (data === null || data === void 0 ? void 0 : data.error) === 'not_in_couple') {\n    if (window.location.pathname !== '/onboarding-couple') {\n      window.location.href = '/onboarding-couple';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// ---- Auth\nexport const authService = {\n  login: async (email, password) => (await api.post('/login', {\n    email,\n    password\n  })).data,\n  register: async (name, email, password) => (await api.post('/register', {\n    name,\n    email,\n    password\n  })).data,\n  getUsers: async () => (await api.get('/users')).data\n};\n\n// ---- Couple\nexport const coupleService = {\n  me: async () => (await api.get('/couple/me')).data,\n  create: async () => (await api.post('/couple/create')).data,\n  join: async invite_code => (await api.post('/couple/join', {\n    invite_code\n  })).data,\n  refreshInvite: async () => (await api.post('/couple/invite/refresh')).data\n};\n\n// ---- Reminders\nexport const reminderService = {\n  getAll: async () => (await api.get('/reminders')).data,\n  create: async reminder => (await api.post('/reminders', reminder)).data,\n  update: async (id, updates) => (await api.put(`/reminders/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/reminders/${id}`)).data\n};\n\n// ---- Restaurants\nexport const restaurantService = {\n  getAll: async () => (await api.get('/restaurants')).data,\n  create: async restaurant => (await api.post('/restaurants', restaurant)).data,\n  update: async (id, updates) => (await api.put(`/restaurants/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/restaurants/${id}`)).data\n};\n\n// ---- Activities\nexport const activityService = {\n  getAll: async () => (await api.get('/activities')).data,\n  create: async activity => (await api.post('/activities', activity)).data,\n  update: async (id, updates) => (await api.put(`/activities/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/activities/${id}`)).data\n};\n\n// ---- Wishlist\nexport const wishlistService = {\n  getAll: async () => (await api.get('/wishlist')).data,\n  create: async item => (await api.post('/wishlist', item)).data,\n  update: async (id, updates) => (await api.put(`/wishlist/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/wishlist/${id}`)).data\n};\n\n// ---- Photos\nexport const photoService = {\n  getAll: async () => (await api.get('/photos')).data,\n  create: async photo => (await api.post('/photos', photo)).data,\n  update: async (id, updates) => (await api.put(`/photos/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/photos/${id}`)).data\n};\n\n// ---- Notes\nexport const noteService = {\n  getAll: async () => (await api.get('/notes')).data,\n  create: async note => (await api.post('/notes', note)).data,\n  update: async (id, updates) => (await api.put(`/notes/${id}`, updates)).data,\n  delete: async id => (await api.delete(`/notes/${id}`)).data\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","res","error","_error$response","_error$response2","status","data","removeItem","window","location","href","pathname","Promise","reject","authService","login","email","password","post","register","name","getUsers","get","coupleService","me","join","invite_code","refreshInvite","reminderService","getAll","reminder","update","id","updates","put","delete","restaurantService","restaurant","activityService","activity","wishlistService","item","photoService","photo","noteService","note"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/services/authService.js"],"sourcesContent":["// frontend/src/services/authService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\n// ---- Token sur chaque requête\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('us_token');\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n// ---- Gestion 401 / 409 globalement\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (error) => {\r\n    const status = error.response?.status;\r\n    const data = error.response?.data;\r\n\r\n    if (status === 401) {\r\n      localStorage.removeItem('us_token');\r\n      localStorage.removeItem('us_user');\r\n      window.location.href = '/';\r\n    }\r\n    if (status === 409 && data?.error === 'not_in_couple') {\r\n      if (window.location.pathname !== '/onboarding-couple') {\r\n        window.location.href = '/onboarding-couple';\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ---- Auth\r\nexport const authService = {\r\n  login: async (email, password) => (await api.post('/login', { email, password })).data,\r\n  register: async (name, email, password) =>\r\n    (await api.post('/register', { name, email, password })).data,\r\n  getUsers: async () => (await api.get('/users')).data,\r\n};\r\n\r\n// ---- Couple\r\nexport const coupleService = {\r\n  me: async () => (await api.get('/couple/me')).data,\r\n  create: async () => (await api.post('/couple/create')).data,\r\n  join: async (invite_code) => (await api.post('/couple/join', { invite_code })).data,\r\n  refreshInvite: async () => (await api.post('/couple/invite/refresh')).data,\r\n};\r\n\r\n// ---- Reminders\r\nexport const reminderService = {\r\n  getAll: async () => (await api.get('/reminders')).data,\r\n  create: async (reminder) => (await api.post('/reminders', reminder)).data,\r\n  update: async (id, updates) => (await api.put(`/reminders/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/reminders/${id}`)).data,\r\n};\r\n\r\n// ---- Restaurants\r\nexport const restaurantService = {\r\n  getAll: async () => (await api.get('/restaurants')).data,\r\n  create: async (restaurant) => (await api.post('/restaurants', restaurant)).data,\r\n  update: async (id, updates) => (await api.put(`/restaurants/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/restaurants/${id}`)).data,\r\n};\r\n\r\n// ---- Activities\r\nexport const activityService = {\r\n  getAll: async () => (await api.get('/activities')).data,\r\n  create: async (activity) => (await api.post('/activities', activity)).data,\r\n  update: async (id, updates) => (await api.put(`/activities/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/activities/${id}`)).data,\r\n};\r\n\r\n// ---- Wishlist\r\nexport const wishlistService = {\r\n  getAll: async () => (await api.get('/wishlist')).data,\r\n  create: async (item) => (await api.post('/wishlist', item)).data,\r\n  update: async (id, updates) => (await api.put(`/wishlist/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/wishlist/${id}`)).data,\r\n};\r\n\r\n// ---- Photos\r\nexport const photoService = {\r\n  getAll: async () => (await api.get('/photos')).data,\r\n  create: async (photo) => (await api.post('/photos', photo)).data,\r\n  update: async (id, updates) => (await api.put(`/photos/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/photos/${id}`)).data,\r\n};\r\n\r\n// ---- Notes\r\nexport const noteService = {\r\n  getAll: async () => (await api.get('/notes')).data,\r\n  create: async (note) => (await api.post('/notes', note)).data,\r\n  update: async (id, updates) => (await api.put(`/notes/${id}`, updates)).data,\r\n  delete: async (id) => (await api.delete(`/notes/${id}`)).data,\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}