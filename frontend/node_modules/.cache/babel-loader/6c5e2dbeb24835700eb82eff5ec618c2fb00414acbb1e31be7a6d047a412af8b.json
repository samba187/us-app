{"ast":null,"code":"import _objectSpread from\"C:/Users/sorbo/US/us-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/sorbo/US/us-app/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React,{useState,useEffect}from'react';import styled from'styled-components';import notificationService from'../services/notificationService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 16px;\\n  padding: 20px;\\n  margin-bottom: 20px;\\n  box-shadow: var(--shadow);\\n\"])));const Title=styled.h3(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 15px;\\n  color: var(--text-color);\\n  font-size: 18px;\\n\"])));const SettingItem=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 12px 0;\\n  border-bottom: 1px solid var(--border-color);\\n\\n  &:last-child {\\n    border-bottom: none;\\n  }\\n\"])));const SettingLabel=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  color: var(--text-color);\\n\"])));const SettingDescription=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: var(--text-light);\\n  margin-top: 2px;\\n\"])));const Toggle=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 50px;\\n  height: 28px;\\n  background: \",\";\\n  border-radius: 14px;\\n  position: relative;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  &::after {\\n    content: '';\\n    position: absolute;\\n    top: 2px;\\n    left: \",\";\\n    width: 24px;\\n    height: 24px;\\n    background: white;\\n    border-radius: 50%;\\n    transition: all 0.3s ease;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n  }\\n\"])),props=>props.active?'linear-gradient(135deg, #ff6b8a, #4ecdc4)':'#ccc',props=>props.active?'24px':'2px');const Button=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #ff6b8a, #4ecdc4);\\n  color: white;\\n  border: none;\\n  padding: 10px 16px;\\n  border-radius: 8px;\\n  font-size: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  margin-left: 10px;\\n\"])));const StatusBadge=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 4px 8px;\\n  border-radius: 12px;\\n  font-size: 11px;\\n  font-weight: 600;\\n  background: \",\";\\n  color: \",\";\\n\"])),props=>{switch(props.status){case'granted':return'#d4edda';case'denied':return'#f8d7da';default:return'#fff3cd';}},props=>{switch(props.status){case'granted':return'#155724';case'denied':return'#721c24';default:return'#856404';}});export default function NotificationSettings(){const[isSupported,setIsSupported]=useState(false);const[permission,setPermission]=useState('default');const[settings,setSettings]=useState({newReminders:true,urgentReminders:true,dueDateReminders:true});useEffect(()=>{// Vérifier le support et la permission\nsetIsSupported(notificationService.isSupported);setPermission(notificationService.permission);// Charger les paramètres depuis localStorage\nconst savedSettings=localStorage.getItem('notification_settings');if(savedSettings){setSettings(JSON.parse(savedSettings));}},[]);const saveSettings=newSettings=>{setSettings(newSettings);localStorage.setItem('notification_settings',JSON.stringify(newSettings));};const handlePermissionRequest=async()=>{const granted=await notificationService.requestPermission();setPermission(granted?'granted':'denied');if(granted){// Initialiser le service worker\nawait notificationService.init();}};const handleTest=async()=>{const success=await notificationService.testNotification();if(!success){alert('Erreur lors de l\\'envoi de la notification de test');}};const toggleSetting=key=>{const newSettings=_objectSpread(_objectSpread({},settings),{},{[key]:!settings[key]});saveSettings(newSettings);};if(!isSupported){return/*#__PURE__*/_jsxs(NotificationContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83D\\uDD14 Notifications\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'var(--text-light)',fontSize:'14px'},children:\"Les notifications ne sont pas support\\xE9es sur ce navigateur.\"})]});}return/*#__PURE__*/_jsxs(NotificationContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD83D\\uDD14 Notifications\"}),/*#__PURE__*/_jsxs(SettingItem,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingLabel,{children:\"Statut des notifications\"}),/*#__PURE__*/_jsx(SettingDescription,{children:/*#__PURE__*/_jsx(StatusBadge,{status:permission,children:permission==='granted'?'Autorisées':permission==='denied'?'Refusées':'En attente'})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[permission!=='granted'&&/*#__PURE__*/_jsx(Button,{onClick:handlePermissionRequest,children:\"Autoriser\"}),permission==='granted'&&/*#__PURE__*/_jsx(Button,{onClick:handleTest,children:\"Tester\"})]})]}),permission==='granted'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SettingItem,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingLabel,{children:\"Nouveaux rappels\"}),/*#__PURE__*/_jsx(SettingDescription,{children:\"Notifier lors de l'ajout d'un rappel\"})]}),/*#__PURE__*/_jsx(Toggle,{active:settings.newReminders,onClick:()=>toggleSetting('newReminders')})]}),/*#__PURE__*/_jsxs(SettingItem,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingLabel,{children:\"Rappels urgents\"}),/*#__PURE__*/_jsx(SettingDescription,{children:\"Notifications sp\\xE9ciales pour les priorit\\xE9s urgentes\"})]}),/*#__PURE__*/_jsx(Toggle,{active:settings.urgentReminders,onClick:()=>toggleSetting('urgentReminders')})]}),/*#__PURE__*/_jsxs(SettingItem,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingLabel,{children:\"\\xC9ch\\xE9ances\"}),/*#__PURE__*/_jsx(SettingDescription,{children:\"Notifier avant les dates d'\\xE9ch\\xE9ance\"})]}),/*#__PURE__*/_jsx(Toggle,{active:settings.dueDateReminders,onClick:()=>toggleSetting('dueDateReminders')})]})]})]});}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}