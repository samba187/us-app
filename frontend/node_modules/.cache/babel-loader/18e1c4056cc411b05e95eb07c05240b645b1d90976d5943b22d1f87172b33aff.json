{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Créer une instance axios avec configuration par défaut\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('us_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('us_token');\n    localStorage.removeItem('us_user');\n    window.location.href = '/';\n  } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 409) {\n    // Erreur couple - rediriger vers onboarding\n    window.location.href = '/onboarding-couple';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async (name, email, password) => {\n    const response = await api.post('/register', {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  },\n  getUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  }\n};\nexport const coupleService = {\n  me: async () => {\n    const response = await api.get('/couple/me');\n    return response.data;\n  },\n  create: async () => {\n    const response = await api.post('/couple/create');\n    return response.data;\n  },\n  join: async code => {\n    const response = await api.post('/couple/join', {\n      code\n    });\n    return response.data;\n  }\n};\nexport const reminderService = {\n  getAll: async () => {\n    const response = await api.get('/reminders');\n    return response.data;\n  },\n  create: async reminder => {\n    const response = await api.post('/reminders', reminder);\n    return response.data;\n  },\n  update: async (id, updates) => {\n    const response = await api.put(`/reminders/${id}`, updates);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/reminders/${id}`);\n    return response.data;\n  }\n};\nexport const restaurantService = {\n  getAll: async () => {\n    const response = await api.get('/restaurants');\n    return response.data;\n  },\n  create: async restaurant => {\n    const response = await api.post('/restaurants', restaurant);\n    return response.data;\n  },\n  update: async (id, updates) => {\n    const response = await api.put(`/restaurants/${id}`, updates);\n    return response.data;\n  }\n};\nexport const activityService = {\n  getAll: async () => {\n    const response = await api.get('/activities');\n    return response.data;\n  },\n  create: async activity => {\n    const response = await api.post('/activities', activity);\n    return response.data;\n  },\n  update: async (id, updates) => {\n    const response = await api.put(`/activities/${id}`, updates);\n    return response.data;\n  }\n};\nexport const wishlistService = {\n  getAll: async () => {\n    const response = await api.get('/wishlist');\n    return response.data;\n  },\n  create: async item => {\n    const response = await api.post('/wishlist', item);\n    return response.data;\n  },\n  update: async (id, updates) => {\n    const response = await api.put(`/wishlist/${id}`, updates);\n    return response.data;\n  }\n};\nexport const photoService = {\n  getAll: async () => {\n    const response = await api.get('/photos');\n    return response.data;\n  },\n  create: async photo => {\n    const response = await api.post('/photos', photo);\n    return response.data;\n  }\n};\nexport const noteService = {\n  getAll: async () => {\n    const response = await api.get('/notes');\n    return response.data;\n  },\n  create: async note => {\n    const response = await api.post('/notes', note);\n    return response.data;\n  },\n  update: async (id, updates) => {\n    const response = await api.put(`/notes/${id}`, updates);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/notes/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","href","authService","login","email","password","post","data","register","name","getUsers","get","coupleService","me","join","code","reminderService","getAll","reminder","update","id","updates","put","delete","restaurantService","restaurant","activityService","activity","wishlistService","item","photoService","photo","noteService","note"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Créer une instance axios avec configuration par défaut\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('us_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les erreurs d'authentification\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('us_token');\r\n      localStorage.removeItem('us_user');\r\n      window.location.href = '/';\r\n    } else if (error.response?.status === 409) {\r\n      // Erreur couple - rediriger vers onboarding\r\n      window.location.href = '/onboarding-couple';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (name, email, password) => {\r\n    const response = await api.post('/register', { name, email, password });\r\n    return response.data;\r\n  },\r\n\r\n  getUsers: async () => {\r\n    const response = await api.get('/users');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const coupleService = {\r\n  me: async () => {\r\n    const response = await api.get('/couple/me');\r\n    return response.data;\r\n  },\r\n\r\n  create: async () => {\r\n    const response = await api.post('/couple/create');\r\n    return response.data;\r\n  },\r\n\r\n  join: async (code) => {\r\n    const response = await api.post('/couple/join', { code });\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const reminderService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/reminders');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (reminder) => {\r\n    const response = await api.post('/reminders', reminder);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/reminders/${id}`, updates);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/reminders/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const restaurantService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/restaurants');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (restaurant) => {\r\n    const response = await api.post('/restaurants', restaurant);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/restaurants/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const activityService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/activities');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (activity) => {\r\n    const response = await api.post('/activities', activity);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/activities/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const wishlistService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/wishlist');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (item) => {\r\n    const response = await api.post('/wishlist', item);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/wishlist/${id}`, updates);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const photoService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/photos');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (photo) => {\r\n    const response = await api.post('/photos', photo);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const noteService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/notes');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (note) => {\r\n    const response = await api.post('/notes', note);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, updates) => {\r\n    const response = await api.put(`/notes/${id}`, updates);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/notes/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}