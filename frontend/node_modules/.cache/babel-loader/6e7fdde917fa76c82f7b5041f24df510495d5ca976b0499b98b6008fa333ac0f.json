{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';// Désactiver le service worker pour éviter les problèmes de cache\nimport{jsx as _jsx}from\"react/jsx-runtime\";if('serviceWorker'in navigator){navigator.serviceWorker.getRegistrations().then(function(registrations){for(let registration of registrations){registration.unregister();}});}const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));","map":{"version":3,"names":["React","ReactDOM","App","jsx","_jsx","navigator","serviceWorker","getRegistrations","then","registrations","registration","unregister","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// Désactiver le service worker pour éviter les problèmes de cache\r\nif ('serviceWorker' in navigator) {\r\n  navigator.serviceWorker.getRegistrations().then(function(registrations) {\r\n    for(let registration of registrations) {\r\n      registration.unregister();\r\n    }\r\n  });\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChCA,SAAS,CAACC,aAAa,CAACC,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAC,SAASC,aAAa,CAAE,CACtE,IAAI,GAAI,CAAAC,YAAY,GAAI,CAAAD,aAAa,CAAE,CACrCC,YAAY,CAACC,UAAU,CAAC,CAAC,CAC3B,CACF,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,IAAI,CAAGX,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTZ,IAAA,CAACJ,KAAK,CAACiB,UAAU,EAAAC,QAAA,cACfd,IAAA,CAACF,GAAG,GAAE,CAAC,CACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}