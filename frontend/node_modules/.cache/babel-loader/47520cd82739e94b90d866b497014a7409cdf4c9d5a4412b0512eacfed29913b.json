{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sorbo\\\\US\\\\us-app\\\\frontend\\\\src\\\\components\\\\NotificationTester.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport notificationService from '../services/notificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: white;\n  border-radius: 12px;\n  padding: 15px;\n  box-shadow: var(--shadow);\n  z-index: 1000;\n  max-width: 200px;\n`;\n_c = TestContainer;\nconst TestButton = styled.button`\n  background: linear-gradient(135deg, #ff6b8a, #4ecdc4);\n  color: white;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 2px;\n  width: 100%;\n`;\n_c2 = TestButton;\nexport default function NotificationTester() {\n  // Seulement en dÃ©veloppement\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n  const testBasic = async () => {\n    await notificationService.testNotification();\n  };\n  const testReminder = async () => {\n    const mockReminder = {\n      _id: 'test-123',\n      title: 'Test Rappel',\n      priority: 'normal'\n    };\n    await notificationService.notifyNewReminder(mockReminder);\n  };\n  const testUrgent = async () => {\n    const mockReminder = {\n      _id: 'urgent-123',\n      title: 'Rappel Urgent !',\n      priority: 'urgent'\n    };\n    await notificationService.notifyUrgentReminder(mockReminder);\n  };\n  const testDue = async () => {\n    const mockReminder = {\n      _id: 'due-123',\n      title: 'Rappel Ã  Ã©chÃ©ance',\n      due_date: new Date(Date.now() + 60 * 60 * 1000).toISOString()\n    };\n    await notificationService.notifyReminderDue(mockReminder);\n  };\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '12px',\n        marginBottom: '8px',\n        fontWeight: '600'\n      },\n      children: \"\\uD83E\\uDDEA Test Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n      onClick: testBasic,\n      children: \"Basic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n      onClick: testReminder,\n      children: \"Rappel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n      onClick: testUrgent,\n      children: \"Urgent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n      onClick: testDue,\n      children: \"\\xC9ch\\xE9ance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c3 = NotificationTester;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"TestButton\");\n$RefreshReg$(_c3, \"NotificationTester\");","map":{"version":3,"names":["React","styled","notificationService","jsxDEV","_jsxDEV","TestContainer","div","_c","TestButton","button","_c2","NotificationTester","process","env","NODE_ENV","testBasic","testNotification","testReminder","mockReminder","_id","title","priority","notifyNewReminder","testUrgent","notifyUrgentReminder","testDue","due_date","Date","now","toISOString","notifyReminderDue","children","style","fontSize","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/sorbo/US/us-app/frontend/src/components/NotificationTester.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport notificationService from '../services/notificationService';\r\n\r\nconst TestContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  box-shadow: var(--shadow);\r\n  z-index: 1000;\r\n  max-width: 200px;\r\n`;\r\n\r\nconst TestButton = styled.button`\r\n  background: linear-gradient(135deg, #ff6b8a, #4ecdc4);\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  margin: 2px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default function NotificationTester() {\r\n  // Seulement en dÃ©veloppement\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null;\r\n  }\r\n\r\n  const testBasic = async () => {\r\n    await notificationService.testNotification();\r\n  };\r\n\r\n  const testReminder = async () => {\r\n    const mockReminder = {\r\n      _id: 'test-123',\r\n      title: 'Test Rappel',\r\n      priority: 'normal'\r\n    };\r\n    await notificationService.notifyNewReminder(mockReminder);\r\n  };\r\n\r\n  const testUrgent = async () => {\r\n    const mockReminder = {\r\n      _id: 'urgent-123',\r\n      title: 'Rappel Urgent !',\r\n      priority: 'urgent'\r\n    };\r\n    await notificationService.notifyUrgentReminder(mockReminder);\r\n  };\r\n\r\n  const testDue = async () => {\r\n    const mockReminder = {\r\n      _id: 'due-123',\r\n      title: 'Rappel Ã  Ã©chÃ©ance',\r\n      due_date: new Date(Date.now() + 60 * 60 * 1000).toISOString()\r\n    };\r\n    await notificationService.notifyReminderDue(mockReminder);\r\n  };\r\n\r\n  return (\r\n    <TestContainer>\r\n      <div style={{ fontSize: '12px', marginBottom: '8px', fontWeight: '600' }}>\r\n        ðŸ§ª Test Notifications\r\n      </div>\r\n      <TestButton onClick={testBasic}>Basic</TestButton>\r\n      <TestButton onClick={testReminder}>Rappel</TestButton>\r\n      <TestButton onClick={testUrgent}>Urgent</TestButton>\r\n      <TestButton onClick={testDue}>Ã‰chÃ©ance</TestButton>\r\n    </TestContainer>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,mBAAmB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,aAAa;AAYnB,MAAMG,UAAU,GAAGP,MAAM,CAACQ,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,UAAU;AAahB,eAAe,SAASG,kBAAkBA,CAAA,EAAG;EAC3C;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,OAAO,IAAI;EACb;EAEA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMb,mBAAmB,CAACc,gBAAgB,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,YAAY,GAAG;MACnBC,GAAG,EAAE,UAAU;MACfC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE;IACZ,CAAC;IACD,MAAMnB,mBAAmB,CAACoB,iBAAiB,CAACJ,YAAY,CAAC;EAC3D,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAML,YAAY,GAAG;MACnBC,GAAG,EAAE,YAAY;MACjBC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE;IACZ,CAAC;IACD,MAAMnB,mBAAmB,CAACsB,oBAAoB,CAACN,YAAY,CAAC;EAC9D,CAAC;EAED,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMP,YAAY,GAAG;MACnBC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,mBAAmB;MAC1BM,QAAQ,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC;IAC9D,CAAC;IACD,MAAM3B,mBAAmB,CAAC4B,iBAAiB,CAACZ,YAAY,CAAC;EAC3D,CAAC;EAED,oBACEd,OAAA,CAACC,aAAa;IAAA0B,QAAA,gBACZ3B,OAAA;MAAK4B,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,YAAY,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAAJ,QAAA,EAAC;IAE1E;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnC,OAAA,CAACI,UAAU;MAACgC,OAAO,EAAEzB,SAAU;MAAAgB,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClDnC,OAAA,CAACI,UAAU;MAACgC,OAAO,EAAEvB,YAAa;MAAAc,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACtDnC,OAAA,CAACI,UAAU;MAACgC,OAAO,EAAEjB,UAAW;MAAAQ,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACpDnC,OAAA,CAACI,UAAU;MAACgC,OAAO,EAAEf,OAAQ;MAAAM,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEpB;AAACE,GAAA,GAhDuB9B,kBAAkB;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}